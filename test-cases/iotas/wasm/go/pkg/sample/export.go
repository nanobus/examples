// Code generated by @apexlang/codegen. DO NOT EDIT.

package sample

import (
	"context"

	"github.com/nanobus/iota/go/invoke"
	"github.com/nanobus/iota/go/payload"
	"github.com/nanobus/iota/go/rx/mono"
	"github.com/nanobus/iota/go/transform"
)

func Registertest(svc test) {
	invoke.ExportRequestResponse("suite.test", "op", testOpWrapper(svc))
	invoke.ExportRequestResponse("suite.test", "reverse", testReverseWrapper(svc))
}

func testOpWrapper(svc test) invoke.RequestResponseHandler {
	return func(ctx context.Context, p payload.Payload) mono.Mono[payload.Payload] {
		response := svc.Op(ctx)
		return mono.Map(response, transform.String.Encode)
	}
}

func testReverseWrapper(svc test) invoke.RequestResponseHandler {
	return func(ctx context.Context, p payload.Payload) mono.Mono[payload.Payload] {
		var inputArgs TestReverseArgs
		if err := transform.CodecDecode(p, &inputArgs); err != nil {
			return mono.Error[payload.Payload](err)
		}
		response := svc.Reverse(ctx, inputArgs.Input)
		return mono.Map(response, transform.String.Encode)
	}
}
