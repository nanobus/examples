// Code generated by @apexlang/codegen. DO NOT EDIT.

package streamer

import (
	"context"

	"github.com/google/uuid"
	"github.com/nanobus/iota/go/rx/flux"
	"github.com/nanobus/iota/go/rx/mono"
)

type ns struct{}

func (n *ns) Namespace() string {
	return "streamer.v1"
}

type Streamer interface {
	Process(ctx context.Context) mono.Void
}

type Source interface {
	Read(ctx context.Context) flux.Flux[Customer]
}

type Sink interface {
	Write(ctx context.Context, out flux.Flux[Customer]) mono.Void
}

type Customer struct {
	ns
	ID        uuid.UUID `json:"id" yaml:"id" msgpack:"id"`
	FirstName string    `json:"firstName" yaml:"firstName" msgpack:"firstName"`
	LastName  string    `json:"lastName" yaml:"lastName" msgpack:"lastName"`
}

func (c *Customer) Type() string {
	return "Customer"
}
