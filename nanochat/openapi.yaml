openapi: 3.0.0
info:
    title: Simple chat app
    description: Simple chat application created using NanoBus and IOtas.
    version: 1.0.0
    contact:
        email: api@nanochat.io
        name: API Support
        url: https://nanochat.io/support
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0
    termsOfService: https://nanochat.io/terms/
servers:
    - url: 'http://localhost:8080'
paths:
    /v1/jots:
        get:
            description: Get the jot feed
            operationId: getFeed
            parameters:
                - in: query
                  name: before
                  schema:
                    format: date-time
                    type: string
                - in: query
                  name: limit
                  schema:
                    default: 100
                    format: int32
                    type: integer
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JotPage'
                    description: Success
            tags:
                - Jots
        post:
            description: Post a Tweet.
            operationId: postJot
            requestBody:
                content:
                    application/json:
                        schema:
                            properties:
                                message:
                                    type: string
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Jot'
                    description: Success
            tags:
                - Jots
    /v1/jots/{id}:
        delete:
            description: Delete a tweet (only creator has access)
            operationId: deleteJot
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Jot'
                    description: Success
            tags:
                - Jots
        get:
            description: Get a tweet by id.
            operationId: getJot
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Jot'
                    description: Success
            tags:
                - Jots
    /v1/jots/{id}/like:
        delete:
            description: Unlike a tweet
            operationId: unlike
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses: null
            tags:
                - Jots
        get:
            description: Like a tweet
            operationId: like
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
            responses: null
            tags:
                - Jots
    /v1/jots/{id}/likes:
        get:
            description: Get the users that like a jot.
            operationId: likes
            parameters:
                - in: path
                  name: id
                  required: true
                  schema:
                    type: string
                - description: Offset
                  in: query
                  name: offset
                  schema:
                    default: 0
                    description: Offset
                    format: int32
                    type: integer
                - description: Limit
                  in: query
                  name: limit
                  schema:
                    default: 100
                    description: Limit
                    format: int32
                    type: integer
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: Success
            tags:
                - Jots
    /v1/users/{handle}:
        get:
            description: Get the user's profile
            operationId: getProfile
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/User'
                    description: Success
            tags:
                - Users
    /v1/users/{handle}/follow:
        delete:
            description: Unfollow a user
            operationId: unfollow
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
            responses: null
            tags:
                - Users
        get:
            description: Follow a user
            operationId: follow
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
            responses: null
            tags:
                - Users
    /v1/users/{handle}/followers:
        get:
            description: Get followers of a user
            operationId: getFollowers
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
                - description: Offset
                  in: query
                  name: offset
                  schema:
                    default: 0
                    description: Offset
                    format: int32
                    type: integer
                - description: Limit
                  in: query
                  name: limit
                  schema:
                    default: 100
                    description: Limit
                    format: int32
                    type: integer
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: Success
            tags:
                - Users
    /v1/users/{handle}/follows:
        get:
            description: Get users the followed by the users
            operationId: getFollows
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
                - description: Offset
                  in: query
                  name: offset
                  schema:
                    default: 0
                    description: Offset
                    format: int32
                    type: integer
                - description: Limit
                  in: query
                  name: limit
                  schema:
                    default: 100
                    description: Limit
                    format: int32
                    type: integer
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserPage'
                    description: Success
            tags:
                - Users
    /v1/users/{handle}/jots:
        get:
            description: Get the user's jots.
            operationId: getJots
            parameters:
                - in: path
                  name: handle
                  required: true
                  schema:
                    type: string
                - in: query
                  name: before
                  schema:
                    format: date-time
                    type: string
                - in: query
                  name: limit
                  schema:
                    default: 100
                    format: int32
                    type: integer
            responses:
                default:
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/JotPage'
                    description: Success
            tags:
                - Users
tags:
    - description: Jot API
      name: Jots
    - description: Users API
      name: Users
components:
    schemas:
        Jot:
            description: Jot entity
            properties:
                handle:
                    description: The jot owner handle
                    type: string
                id:
                    description: The dynamically generated ID.
                    type: string
                likes:
                    description: The number of likes.
                    format: int32
                    type: integer
                message:
                    description: The message body.
                    type: string
                time:
                    description: The time the tweet was entered.
                    format: date-time
                    type: string
                userId:
                    description: The jot owner ID.
                    type: string
        JotPage:
            description: Jot page
            properties:
                before:
                    description: Before timestamp
                    format: date-time
                    type: string
                items:
                    description: The tweets returned
                    items:
                        $ref: '#/components/schemas/Jot'
                    type: array
                limit:
                    description: Limit result
                    format: int32
                    type: integer
        User:
            description: User entity
            properties:
                followers:
                    description: The number of followers
                    format: int32
                    type: integer
                follows:
                    description: The number of users followed
                    format: int32
                    type: integer
                handle:
                    description: Handle.
                    type: string
                id:
                    description: User ID.
                    type: string
                isFollowing:
                    description: If the authenticated user is following this user. Will return false if unauthenticated or outside of Users::getProfile.
                    type: boolean
        UserPage:
            description: User page
            properties:
                items:
                    description: The users returned
                    items:
                        $ref: '#/components/schemas/User'
                    type: array
                limit:
                    description: Limit
                    format: int32
                    type: integer
                offset:
                    description: Offet
                    format: int32
                    type: integer
