/* tslint:disable */
/* eslint-disable */
/**
 * Simple chat app
 * Simple chat application created using NanoBus and IOtas.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@nanochat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * User page
 * @export
 * @interface UserPage
 */
export interface UserPage {
    /**
     * The users returned
     * @type {Array<User>}
     * @memberof UserPage
     */
    items?: Array<User>;
    /**
     * Limit
     * @type {number}
     * @memberof UserPage
     */
    limit?: number;
    /**
     * Offet
     * @type {number}
     * @memberof UserPage
     */
    offset?: number;
}

/**
 * Check if a given object implements the UserPage interface.
 */
export function instanceOfUserPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserPageFromJSON(json: any): UserPage {
    return UserPageFromJSONTyped(json, false);
}

export function UserPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'items': !exists(json, 'items') ? undefined : ((json['items'] as Array<any>).map(UserFromJSON)),
        'limit': !exists(json, 'limit') ? undefined : json['limit'],
        'offset': !exists(json, 'offset') ? undefined : json['offset'],
    };
}

export function UserPageToJSON(value?: UserPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'items': value.items === undefined ? undefined : ((value.items as Array<any>).map(UserToJSON)),
        'limit': value.limit,
        'offset': value.offset,
    };
}

