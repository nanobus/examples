/* tslint:disable */
/* eslint-disable */
/**
 * Simple chat app
 * Simple chat application created using NanoBus and IOtas.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: api@nanochat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Jot entity
 * @export
 * @interface Jot
 */
export interface Jot {
    /**
     * The jot owner handle
     * @type {string}
     * @memberof Jot
     */
    handle?: string;
    /**
     * The dynamically generated ID.
     * @type {string}
     * @memberof Jot
     */
    id?: string;
    /**
     * The number of likes.
     * @type {number}
     * @memberof Jot
     */
    likes?: number;
    /**
     * The message body.
     * @type {string}
     * @memberof Jot
     */
    message?: string;
    /**
     * The time the tweet was entered.
     * @type {Date}
     * @memberof Jot
     */
    time?: Date;
    /**
     * The jot owner ID.
     * @type {string}
     * @memberof Jot
     */
    userId?: string;
}

/**
 * Check if a given object implements the Jot interface.
 */
export function instanceOfJot(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function JotFromJSON(json: any): Jot {
    return JotFromJSONTyped(json, false);
}

export function JotFromJSONTyped(json: any, ignoreDiscriminator: boolean): Jot {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'handle': !exists(json, 'handle') ? undefined : json['handle'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'likes': !exists(json, 'likes') ? undefined : json['likes'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'time': !exists(json, 'time') ? undefined : (new Date(json['time'])),
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function JotToJSON(value?: Jot | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'handle': value.handle,
        'id': value.id,
        'likes': value.likes,
        'message': value.message,
        'time': value.time === undefined ? undefined : (value.time.toISOString()),
        'userId': value.userId,
    };
}

