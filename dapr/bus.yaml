id: dapr-example
version: 0.0.1
spec: apex.axdl
transports:
  http:
    uses: nanobus.transport.http.server/v1
    with:
      address: ':8080'
      middleware: []
      routers:
        - uses: nanobus.transport.http.rest/v1
          with:
            documentation:
              swaggerUI: true
              postman: true
              restClient: true
  dapr:
    uses: nanobus.transport.dapr/v1
    with:
      address: ':19090'
      subscriptions:
        - pubsub: pubsub
          topic: welcome
          codec: cloudevents+json
          handler: 'dapr-example.Events::onWelcome'
authorization:
  dapr-example.People:
    get:
      unauthenticated: true
    create:
      unauthenticated: true
interfaces:
  dapr-example.People:
    get:
      steps:
        - name: Get state
          uses: '@dapr/get_state'
          with:
            store: statestore
            key: input.id
            notFoundError: person_not_found
    create:
      steps:
        - name: Save state
          uses: '@dapr/set_state'
          with:
            store: statestore
            items:
              - key: input.id
                value: input
        - name: Publish greeting message
          uses: '@dapr/publish'
          with:
            pubsub: pubsub
            topic: welcome
            data: |-

              {
                "type": "welcome.v1",
                "data": {
                  "message": "Welcome, " + input.firstName + " " + input.lastName + "!",
                },
              }
            codec: cloudevents+json
        - name: 201 Created
          uses: http_response
          with:
            status: 201
            headers:
              - name: Location
                value: '"{{host}}/people/" + input.id'
  dapr-example.Events:
    onWelcome:
      steps:
        - name: Log the welcome message
          uses: log
          with:
            format: 'Event received: [%s] %q'
            args:
              - input.type
              - input.data.message
errors:
  not_found:
    type: NotFound
    code: not_found
    title: Resource not found
    message: 'Resource with id {{ .key }} was not found'
  permission_denied:
    type: PermissionDenied
    code: permission_denied
    title: Permission denied
    message: >-
      You don't have permission to access this resource or to perform the
      operation.
  unauthenticated:
    type: Unauthenticated
    code: unauthenticated
    title: Unauthenticated
    message: You must be logged in to perform the operation.
  person_not_found:
    type: PersonNotFound
    code: not_found
    title: Person not found
    message: 'Person for id {{ .key }} is not found'
